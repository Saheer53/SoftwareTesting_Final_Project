{"version":3,"sources":["src/appointmentHandler.js","src/index.js"],"names":["validateName","name","arguments","length","undefined","trim","test","validateDateOfBirth","dateOfBirth","dob","Date","today","setHours","validateEmail","email","validateTerms","termsAgreed","formatDate","date","d","isNaN","getTime","day","getDate","toString","padStart","month","getMonth","year","getFullYear","concat","_appointmentHandler","require","menuLinks","text","href","subLinks","topMenuEl","document","getElementById","helperBuildMenu","links","menuEl","innerHTML","forEach","link","anchor","createElement","setAttribute","textContent","appendChild","style","height","backgroundColor","classList","add","subMenuEl","querySelector","addGlobalEventListener","element","type","selector","callback","addEventListener","e","preventDefault","target","tagName","toggle","matches","topMenuLinks","remove","position","top","querySelectorAll","hasSubLinks","find","openHours","timeSlotsContainers","container","display","field","generateTimeSlots","startTime","endTime","getDay","toDateString","currentTime","getHours","getMinutes","nextSlotTime","Math","ceil","floor","fragment","createDocumentFragment","_loop","timeSlot","toLocaleTimeString","hour","minute","slot","removeAttribute","setMinutes","myTimer","min","toISOString","split","value","nextSibling","previousDateDemo","dateDemo","id","padding","toLocaleDateString","weekday","parentNode","insertBefore","setInterval","radio","_this","checked","otherRadio","window","confirm","history","back","event","firstname","lastname","reasonSelect","reason","options","selectedIndex","timeSlotSelected","isValid","messages","push","alert","join"],"mappings":"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","file":"src.c94d4aa9.js","sourceRoot":"..","sourcesContent":["export function validateName(name, allowEmpty = false) {\n    if (allowEmpty && name.trim() === '') return true;\n    return /^[A-Za-z\\s]+$/.test(name);\n}\n\nexport function validateDateOfBirth(dateOfBirth) {\n    const dob = new Date(dateOfBirth);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Normalize today's date for comparison\n    return dob <= today;\n}\n\nexport function validateEmail(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n}\n\nexport function validateTerms(termsAgreed) {\n    return termsAgreed === true;\n}\n\nexport function formatDate(date) {\n    const d = new Date(date);\n    // Checking if the date is valid\n    if (isNaN(d.getTime())) return 'Invalid Date';\n    \n    // Extracting day, month, and year\n    const day = d.getDate().toString().padStart(2, '0');\n    const month = (d.getMonth() + 1).toString().padStart(2, '0');\n    const year = d.getFullYear();\n    \n    return `${month}/${day}/${year}`;\n}\n//test2","// === nav bar: top-menu and sub-menu ==============\n// menu data structure\nvar menuLinks = [\n    { text: 'about', href: '/about' }, \n    { text: 'locations', href: '#', subLinks: [\n        {text: 'all', href: '/locations/all'},\n        {text: 'adults', href: '/locations/adults'},\n        {text: 'children', href: '/locations/children'},\n        {text: 'quick links', href: '/locations/quick'}\n    ]},\n    { text: 'find a doctor', href: '#', subLinks: [\n        {text: 'all', href: '/doctor/all'},\n        {text: 'adults', href: '/doctor/adults'},\n        {text: 'children', href: '/doctor/children'},\n        {text: 'quick links', href: '/doctor/quick'}\n    ]},\n    { text: 'patients & visitors', href: '#', subLinks: [\n        {text: 'FAQs', href: '/patients/faqs'},\n        {text: 'schedule appointments online', href: '/patients/schedule-online'}, \n        {text: 'quick links', href: '/patients/quick'},\n        {text: 'contact us', href: '/patients/contactus'}\n    ]},\n    { text: 'my health account', href: '/myaccount'}\n]\n\n// top-menu\nconst topMenuEl = document.getElementById('top-menu');\ntopMenuEl.style.height = \"100%\";\ntopMenuEl.style.backgroundColor = 'var(--top-menu-bg)';\ntopMenuEl.classList.add('flex-around');\n\nhelperBuildMenu(menuLinks, topMenuEl);\n\n// -- helper function to build menu elements for all top-menu & sub-menu\nfunction helperBuildMenu(links, menuEl) {\n    menuEl.innerHTML = \"\";\n    links.forEach((link) => {\n        const anchor = document.createElement('a');\n        anchor.setAttribute('href', link.href);\n        anchor.textContent = link.text;\n        menuEl.appendChild(anchor);\n    })\n}\n\n// sub-menu\nconst subMenuEl = document.querySelector('#sub-menu');\nsubMenuEl.style.height = \"100%\";\nsubMenuEl.style.backgroundColor = 'var(--sub-menu-bg)';\nsubMenuEl.classList.add('flex-around');\nsubMenuEl.style.position = \"absolute\";\nsubMenuEl.style.top = \"0\";\n\n// -- helper function for all addEventListener\nfunction addGlobalEventListener(element, type, selector, callback) {\n    element.addEventListener(type, e => {\n        e.preventDefault();\n        if (e.target.tagName !== 'A') { return; }\n\n        e.target.classList.toggle('active');\n\n        if (e.target.matches(selector)) callback(e)\n\n        topMenuLinks.forEach(function(link) {\n            link.classList.remove('active');\n        })\n    })\n} \n\n// interaction between top-menu & sub-menu\nconst topMenuLinks = topMenuEl.querySelectorAll('a');\naddGlobalEventListener(topMenuEl, 'click', 'a', e => {\n    const hasSubLinks = menuLinks.find((link) => link.text === e.target.textContent).subLinks;\n\n        if (e.target.classList !== 'active') {\n            if (hasSubLinks) {\n                subMenuEl.style.top = \"100%\";\n                helperBuildMenu(hasSubLinks, subMenuEl);\n            } else {\n                subMenuEl.style.top = \"0\";\n            }\n        }\n})\n\naddGlobalEventListener(subMenuEl, 'click', 'a', e => {\n    if (subMenuEl.style.top === \"100%\") {\n        subMenuEl.style.top = \"0\";\n    }\n})\n\n\n// === left: select date, time slots, local time ===============================\nlet openHours = document.getElementById('open');\nconst timeSlotsContainers = document.querySelectorAll('.time-slots');\n\n// hide time slots initially\ntimeSlotsContainers.forEach(container => container.style.display = 'none');\n\n// handle date change\nlet field = document.querySelector('#date')\nfield.min = new Date().toISOString().split('T')[0];\n\ndate.addEventListener('input', function () {\n    let date = new Date(`${field.value}T00:00`);\n    // console.log(date.getDay());\n\n    // clear previous dateDemo if there is a next sibling\n    if (field.nextSibling) {\n        let previousDateDemo = document.querySelector('#dateDemo');\n        if (previousDateDemo) {\n            previousDateDemo.remove();\n        }\n    }\n\n    // create and append new dateDemo\n    const dateDemo = document.createElement('div');\n    dateDemo.id = 'dateDemo';\n    dateDemo.style.padding = '10px 0';\n    dateDemo.textContent = `${date.toLocaleDateString('en-US', {weekday: 'long', month: 'long', day: 'numeric', year: 'numeric'})}`;\n    field.parentNode.insertBefore(dateDemo, field.nextSibling);\n\n    // update the operation hours on that day\n    if (date.getDay() === 0 || date.getDay() === 6) {\n        openHours.innerHTML = 'Select a Time between 9AM and 6PM EST';\n    } else {\n        openHours.innerHTML = 'Select a Time between 8AM and 8PM EST';\n    }\n\n    // update available time\n    // Call the function to generate time slots\n    generateTimeSlots(date);\n    // show time slots\n    timeSlotsContainers.forEach(container => container.style.display = 'block');\n\n    // TODO: once the available time is full, remove that time slot\n})\n\n// Function to generate time slots\nfunction generateTimeSlots(date) {\n    timeSlotsContainers.forEach(container => {\n        // clear previous content\n        container.innerHTML = '';\n\n        // setup startTime and endTime for time slots\n        const startTime = new Date(date);\n        startTime.setHours(8, 0, 0, 0);\n        // console.log(startTime);\n        const endTime = new Date(date);\n        endTime.setHours(20, 0, 0, 0);\n        const interval = 20;\n\n        // check if it's a weekend, adjust working hours accordingly\n        if (date.getDay() === 0 || date.getDay() === 6) {\n            startTime.setHours(9, 0, 0, 0);\n            endTime.setHours(18, 0, 0, 0);\n        } \n\n        // check if it is today, reset the start time after current local time\n        if (date.toDateString() === new Date().toDateString()) {\n            const currentTime = new Date().getHours() * 60 + new Date().getMinutes();\n            const nextSlotTime = Math.ceil(currentTime / 20) * 20;\n            startTime.setHours(Math.floor(nextSlotTime / 60), nextSlotTime % 60, 0, 0);\n        }\n\n        // create a document fragment to hold the time slots\n        const fragment = document.createDocumentFragment();\n\n        // loop through time slots\n        while (startTime < endTime) {\n            // create a box for each time slot\n            const timeSlot = document.createElement('div');\n            timeSlot.classList.add('time-slot');\n            timeSlot.textContent = startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n            // add event listener to change attribute on click\n            timeSlot.addEventListener('click', function() {\n                // deselect all time slots\n                document.querySelectorAll('.time-slot').forEach(slot => {\n                    slot.removeAttribute('data-selected');\n                    slot.style.backgroundColor = '';\n                });\n\n                // select the clicked time slot\n                timeSlot.setAttribute('data-selected', 'true');\n                timeSlot.style.backgroundColor = '#5aa9e6';\n            });\n\n            // append the time slot to the fragment\n            fragment.appendChild(timeSlot);\n            // container.appendChild(timeSlot);\n\n            // move to the next time slot\n            startTime.setMinutes(startTime.getMinutes() + interval);\n        }\n\n        // append the fragment with all time slots to the container\n        container.appendChild(fragment);\n    });\n}\n\n// current local time\nsetInterval(myTimer, 1000);\nfunction myTimer () {\n    const d = new Date();\n    document.getElementById('current-time').innerHTML = `Current Local Time: ${new Date().toDateString()} ${d.toLocaleTimeString()}`;\n}\n\n\n// === right: information form ======================================\n// form validation\n// radio button validation: only one radio buton is checked\ndocument.querySelectorAll('input[type=\"radio\"][name=\"gender\"]').forEach(radio => {\n    radio.addEventListener('change', function() {\n        if (this.checked) {\n            document.querySelectorAll('input[type=\"radio\"][name=\"gender\"]').forEach(otherRadio => {\n                if (otherRadio !== this) {\n                    otherRadio.checked = false;\n                }\n            });\n        }\n    });\n});\n// window.confirm when clicks back button\ndocument.getElementById('back').addEventListener('click', function () {\n    const confirmBack = window.confirm('Your information is not saved. The appointment is not saved. Are you sure you want to go back?');\n    if (confirmBack) {\n        window.history.back();\n    }\n});\n// Use require to import the functions from the appointmentHandler module\nimport { validateName, validateDateOfBirth, validateEmail, validateTerms, formatDate } from './appointmentHandler.js';\n\ndocument.getElementById('submit').addEventListener('click', function(event) {\n    event.preventDefault();\n\n    const firstname = document.querySelector('[name=\"firstname\"]').value;\n    const lastname = document.querySelector('[name=\"lastname\"]').value;\n    const dob = document.querySelector('[name=\"dateofbirth\"]').value;\n    const email = document.querySelector('[name=\"email\"]').value;\n    const date = document.querySelector('[name=\"date\"]').value;\n    const reasonSelect = document.querySelector('[name=\"reason\"]');\n    const reason = reasonSelect.options[reasonSelect.selectedIndex].text;\n    const timeSlotSelected = document.querySelector('.time-slot[data-selected=\"true\"]');\n    const termsAgreed = document.querySelector('[name=\"terms\"]').checked;\n\n    let isValid = true;\n    let messages = [];\n\n    if (!validateName(firstname)) {\n        messages.push(\"First name is invalid.\");\n        isValid = false;\n    }\n    if (!validateName(lastname, true)) {\n        messages.push(\"Last name is invalid.\");\n        isValid = false;\n    }\n    if (!validateDateOfBirth(dob)) {\n        messages.push(\"Date of birth cannot be in the future.\");\n        isValid = false;\n    }\n    if (!validateEmail(email)) {\n        messages.push(\"Email is invalid.\");\n        isValid = false;\n    }\n    if (!validateTerms(termsAgreed)) {\n        messages.push(\"You must agree to the terms.\");\n        isValid = false;\n    }\n\n    if (!isValid) {\n        alert(messages.join(\"\\n\"));\n        return;\n    }\n\n    // Display appointment details\n    document.getElementById('detail-date').textContent = `Date: ${formatDate(date)}`;\n    document.getElementById('detail-time').textContent = `Time: ${timeSlotSelected ? timeSlotSelected.textContent : 'Not selected'}`;\n    document.getElementById('detail-name').textContent = `Name: ${firstname} ${lastname}`;\n    document.getElementById('detail-reason').textContent = `Reason for visit: ${reason}`;\n    document.querySelector('.appointment-details').style.display = 'block';\n\n    alert('You have successfully scheduled your visit!');\n});\n//test3"]}